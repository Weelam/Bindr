{"version":3,"sources":["components/Find/FindItem.js","components/Find/FindModal.js","components/Find/FindFilterForm.js","actions/user.js","components/Find/FindFilter.js","actions/defaultModel.js","components/Find/Find.js","pages/FindPage/FindPage.js","pages/Home/Home.js","components/NavBar/NavItem.js","components/NavBar/ProfileMenu.js","components/NavBar/Notifications.js","components/NavBar/OtherUserModal.js","components/NavBar/Navbar.js","components/Login/LoginForm.js","components/Login/Login.js","pages/LoginPage.js","components/Dashboard/Friend.js","components/Dashboard/Group.js","components/Dashboard/Member.js","components/Dashboard/Comment.js","components/Dashboard/Comments.js","components/Dashboard/Task.js","components/Dashboard/Tasks.js","components/Dashboard/Members.js","components/Dashboard/Discussion.js","components/Dashboard/Discussions.js","pages/DashboardPage/DashboardPage.js","components/Admin/Widget.js","pages/Admin/AdminDashboard.js","pages/Admin/Helper.js","pages/Admin/AdminUsers.js","pages/Admin/AdminReports.js","components/Signup/SignupForm.js","components/Chat/Messages.js","components/Signup/Signup.js","pages/SignupPage.js","pages/ProfilePage/ProfilePage.js","App.js","reportWebVitals.js","index.js"],"names":["FindItem","user","opacity","userProfile","className","src","alt","map","item","index","FindModal","openModal","setOpenModal","handleRejectAccept","style","position","Modal","open","onClose","footer","Divider","onClick","FindFilterForm","handleCourse","setCourse","value","type","list","console","log","onSubmit","onChange","e","target","name","id","API_HOST","login","info","setCurrrentUser","a","request","Request","method","body","JSON","stringify","headers","Accept","fetch","res","status","json","data","username","message","role","profile","signup","details","history","push","alert","getAllCourses","setAllCourses","url","response","getAllPrograms","setAllPrograms","removeUser","userID","setUsers","updatedUsers","updateUser","newUser","sendNotification","notification","removeNotification","getNotifications","addFriend","user1","user2","getUserByID","setUserObj","getFriends","setFriends","getUser","getAllUsers","getGroups","setGroups","createGroup","newGroup","newGroups","updatedUser","groups","prev","getTasks","group","setTasks","_id","tasks","createTask","newTask","setGroup","updateTask","task","groupID","FindFilter","filter","setfilter","useState","allCourses","allPrograms","course","program","setProgram","useEffect","filterYear","year","includes","years","x","handleYear","parseInt","handleRemoveFilter","filterType","previousElementSibling","filterToRemove","innerText","preventDefault","courses","programs","htmlFor","defaultModel","password","bio","profileImg","friends","wantToMatch","rejected","notifications","Alert","React","forwardRef","props","ref","elevation","Find","currentUser","obs","useRef","users","currentUserObj","setCurrentUserObj","displayedUsers","setDisplayedUsers","start","end","displayPointer","setDisplayPointer","selectedUser","setSelectedUser","openAlert","setOpenAlert","acceptedSignal","setAcceptedSignal","filteredUsers","setFilteredUsers","handleDisplayedUsers","otherUsers","otherUser","slice","lastUserRef","useCallback","node","current","disconnect","IntersectionObserver","isIntersecting","observe","handleModal","handleCloseAlert","isAdmin","isCourses","some","isProgram","isYear","isFriends","length","filterUsers","display","orientation","flexItem","margin","Snackbar","autoHideDuration","iconMapping","error","fontSize","severity","sx","width","Grid","container","columns","xs","md","rowSpacing","columnSpacing","lastItem","accepted","chosenUser","otherID","recipientID","senderID","content","sendMatch","FindPage","Home","useHistory","Button","size","variant","NavItem","isDropped","setIsDropped","setOtherDropped","children","linkClass","to","outerDiv","drop","ProfileMenuItem","leftIcon","handleLogout","ProfileMenu","notificationsModel","NotificationsItem","Notifications","setNotifications","notif","i","onMouseHover","OtherUserModal","handleAcceptDecline","userObj","Navbar","auth","setCurrentUser","notifDrop","setNotifDrop","profileDrop","setProfileDrop","selectedNotification","setSelectedNotification","then","catch","logout","otherUserObj","LoginForm","handleSubmit","setInfo","Login","setIsAdmin","LoginPage","Friend","friend","rightSide","setUser","Group","handleSelectedGroup","Member","member","Comment","comment","author","Comments","comments","handleAddComment","newComment","setNewComment","sortBy","sort","b","Date","dateAdded","sortByDate","sortComment","Task","selectedGroup","setUseless","retrieveUsername","Accordion","AccordionSummary","expandIcon","completed","handleCheck","AccordionDetails","newCommentContent","now","taskModel","desc","deadline","useStyles","makeStyles","modalItem","alignItems","height","button","color","background","transition","Tasks","setSelectedGroup","classes","finishedTasks","setFinishedTasks","unfinishedTasks","setUnfinishedTasks","setNewTask","filterTasks","unfinished","finished","IconButton","placeholder","maxLength","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","renderInput","TextField","fullWidth","newValue","date","Set","handleAssignMembers","Members","members","title","fontWeight","wordBreak","Discussion","discussion","setComments","discussionModel","toLocaleDateString","weekday","month","day","Discussions","discussions","setDiscussions","newDiscussion","setNewDiscussion","theme","createTheme","palette","primary","main","tab","groupModel","projectName","DashboardPage","leftTab","setLeftTab","rightTab","setRightTab","setNewGroup","ThemeProvider","Tabs","textColor","indicatorColor","centered","Tab","label","handleCreateGroupMembers","Widget","reports","AdminDashboard","report","resetID","array","idType","AdminUsers","anchorEl","setAnchorEl","Boolean","selectedID","setSelectedID","handleClose","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","scope","currentTarget","handleClick","Menu","MenuItem","reportsData","reportID","reporter","reported","AdminReports","setReports","filtered","SignupForm","required","Signup","SignupPage","ProfilePage","handleOther","attribute","rows","cols","App","checkSession","CssBaseline","currrentUser","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62d03e21.chunk.js","sourcesContent":["import React from \"react\";\n\nconst FindItem = ({ user, opacity }) => {\n  const userProfile = user[\"profile\"]\n\n  return (\n    <div className={opacity ? \"itemContainer itemContainer-lowOpac\" : \"itemContainer\"}>\n      <div className=\"profileImgContainer\">\n        <img className=\"profileImg\" src={userProfile[\"profileImg\"]} alt=\"profile\" />\n      </div>\n      <div className=\"itemFooter\">\n        <div>\n          <h3>{user[\"username\"]}</h3>\n          <span> {userProfile[\"year\"]}</span>\n        </div>\n        <p>{userProfile[\"program\"]}</p>\n        <div className=\"itemCourses\">\n          {userProfile[\"courses\"].map((item, index) => {\n            return (\n              <span key={index}>{item}</span>\n            )\n          })}\n        </div>        \n      </div>\n    </div>\n  );\n};\n\nexport default FindItem;\n","import React from \"react\";\nimport Modal from \"@mui/material/Modal\";\nimport Divider from \"@mui/material/Divider\";\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nconst FindModal = ({ openModal, setOpenModal, user, handleRejectAccept }) => {\n  const handleClose = () => {\n    setOpenModal(false);\n  };\n\n  const handleReject = () => {\n    handleRejectAccept(false, user);\n    setOpenModal(false);\n  };\n\n  const handleAccept = () => {\n    handleRejectAccept(true, user);\n    setOpenModal(false);\n  };\n\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <Modal open={openModal} onClose={handleClose} footer={\"Footer\"}>\n        <div className=\"innerModalContainer\">\n          <div className=\"modalImageContainer\">\n            <img className=\"modalImage\" src={user[\"profile\"][\"profileImg\"]} alt=\"profile\" />\n          </div>\n          <div className=\"modalDesc\">\n            <div className=\"modalDesc-nameyear\">\n              <h3>{user[\"username\"]}</h3>\n              <span>{user[\"profile\"][\"year\"]}</span>\n            </div>\n            <p className=\"modalProgram\">{user[\"profile\"][\"program\"]}</p>\n            <div className=\"modalCourses\">\n              {user[\"profile\"][\"courses\"].map((item, index) => {\n                return <span key={index}>{item}</span>;\n              })}\n            </div>\n            <Divider className=\"modalDivider\" />\n            <p className=\"modalBio\"> {user[\"profile\"][\"bio\"]} </p>\n          </div>\n          <div className=\"modalEmptySpace\"></div>\n        </div>\n      </Modal>\n      <div className=\"modalButtonsContainer\">\n        <div className=\"modalButtons\">\n          <button onClick={() => handleReject(false, user)} className=\"modalRejectButton\">\n            <CancelIcon  className=\"modalReject\" />\n          </button>\n          <button onClick={() => handleAccept(true, user)} className=\"modalAcceptButton\">\n            <CheckCircleIcon className=\"modalAccept\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FindModal;\n","import React from \"react\";\n\nconst FindFilterForm = ({handleCourse, setCourse, value, type, list}) => {\n  console.log(list)\n  return (\n    <form onSubmit={handleCourse}>\n      <input\n        onChange={(e) => setCourse(e.target.value)}\n        value={value}\n        list={type}\n        name={type}\n      />\n\n      <datalist id={type}>\n        {/* map all the courses here */}\n        {list && list.map((item, index) => (<option key={index} value={item}/>))}\n      </datalist>\n\n      <input className=\"filterSubmit\" type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n};\n\nexport default FindFilterForm;\n","const API_HOST = \"http://localhost:5000\";\n// check if a user is logged in through session\nexport const checkSession = (setCurrentUser) => {\n  const url = `${API_HOST}/users/check-session`;\n\n  fetch(url)\n    .then((res) => {\n      if (res.status === 200) {\n        return res.json();\n      }\n    })\n    .then((data) => {\n      if (data && data.currentUser) {\n        setCurrentUser(data.currentUser);\n      }\n    })\n    .catch((error) => {\n      // console.log(error);\n    });\n};\n\n/*** Authentication ************************************/\n\n// A function to send a POST request with the user to be logged in\nexport const login = async (info, setCurrrentUser) => {\n  // Create our request constructor with all the parameters we need\n  const request = new Request(`${API_HOST}/users/login`, {\n    method: \"post\",\n    body: JSON.stringify(info),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  try {\n    const res = await fetch(request);\n    if (res.status === 200) {\n      const data = await res.json();\n      const user = data.user;\n      setCurrrentUser(user.username);\n      console.log(\"logged in currentUser: \", user.username);\n      return {\n        login: true,\n        message: \"login successful\",\n        role: user.profile.role,\n      };\n    } else if (res.status === 400) {\n      console.log(\"bad username/password\");\n      return { login: false, message: \"bad username/password\" };\n    } else {\n      console.log(\"other issues\");\n      return { login: false, message: \"other issues\" };\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// A function to send a GET request to logout the current user\nexport const logout = (setCurrentUser) => {\n  const url = `${API_HOST}/users/logout`;\n  fetch(url)\n    .then((res) => {\n      setCurrentUser(null);\n      return res.json;\n    })\n    .then((data) => {\n      console.log(data);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\nexport const signup = async (details, history) => {\n  const request = new Request(`${API_HOST}/users/signup`, {\n    method: \"post\",\n    body: JSON.stringify(details),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  try {\n    const res = await fetch(request);\n    if (res.status === 200) {\n      const data = await res.json();\n      console.log(data);\n      history.push(\"/login\");\n    } else if (res.status === 400) {\n      alert(\"Username already exists\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/*** Courses/Programs Data ************************************/\n// get all courses\n// get all programs\n\nexport const getAllCourses = async (setAllCourses) => {\n  const url = `${API_HOST}/api/courses`;\n  let data;\n  try {\n    const response = await fetch(url);\n    data = await response.json();\n    console.log(data);\n    setAllCourses(data[\"courses\"]);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n// const response = await fetch(url);\n// data = await response.json();\n// return data;\n\nexport const getAllPrograms = async (setAllPrograms) => {\n  const url = `${API_HOST}/api/programs`;\n  let data;\n  try {\n    const response = await fetch(url);\n    data = await response.json();\n    setAllPrograms(data[\"programs\"]);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/*** User Data ************************************/\n\n// delete a user by their id\nexport const removeUser = async (userID, setUsers) => {\n  // replace the entire user object with the new one\n  const request = new Request(`${API_HOST}/api/users/${userID}`, {\n    method: \"delete\",\n    body: JSON.stringify({}),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  try {\n    const res = await fetch(request);\n    const data = await res.json();\n    setUsers(data.updatedUsers);\n    console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// update user details\nexport const updateUser = async (username, newUser) => {\n  // replace the entire user object with the new one\n  const request = new Request(`${API_HOST}/api/users/${username}`, {\n    method: \"put\",\n    body: JSON.stringify({ newUser }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  try {\n    const res = await fetch(request);\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// send notification to a user\n// notification {\n//   sender: currentUser,\n//   recipient: recipient,\n//   content: `${currentUser} wants to match with you!`\n// }\nexport const sendNotification = async (notification) => {\n  // replace the entire user object with the new one\n  const request = new Request(\n    `${API_HOST}/api/notification/send-notification`,\n    {\n      method: \"put\",\n      body: JSON.stringify({ notification }),\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n\n  try {\n    const res = await fetch(request);\n    const data = await res.json();\n    // console.log(data)\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// remove notification\nexport const removeNotification = async (notification) => {\n  // replace the entire user object with the new one\n  const request = new Request(\n    `${API_HOST}/api/notification/remove-notification`,\n    {\n      method: \"put\",\n      body: JSON.stringify({ notification }),\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n\n  try {\n    const res = await fetch(request);\n    const data = await res.json();\n    // console.log(data)\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// get notifications for a user\nexport const getNotifications = async (username) => {\n  const url = `${API_HOST}/api/notifications/${username}`;\n  let data;\n  try {\n    const response = await fetch(url);\n    data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// add friend\nexport const addFriend = async (user1, user2) => {\n  // add each other to friends list\n  console.log(user1, user2);\n\n  // replace the entire user object with the new one\n  const request = new Request(`${API_HOST}/api/friends`, {\n    method: \"put\",\n    body: JSON.stringify({ user1, user2 }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  try {\n    const res = await fetch(request);\n    const data = await res.json();\n    console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// get user by their id\nexport const getUserByID = async (userID, setUserObj) => {\n  const url = `${API_HOST}/api/usersID/${userID}`;\n  let data;\n  try {\n    const response = await fetch(url);\n    data = await response.json();\n    setUserObj(data[\"user\"]);\n    return data[\"user\"];\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// get a users friends by their username\nexport const getFriends = async (username, setFriends) => {\n  const url = `${API_HOST}/api/friends/${username}`;\n  let data;\n  try {\n    const response = await fetch(url);\n    data = await response.json();\n    setFriends(data[\"friends\"]);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// get user object (only their profile details, not username and password!)\nexport const getUser = async (username, setUserObj) => {\n  const url = `${API_HOST}/api/users/${username}`;\n  let data;\n  try {\n    const response = await fetch(url);\n    data = await response.json();\n    setUserObj(data[\"currentUser\"]);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// get all users\nexport const getAllUsers = async (setUsers) => {\n  const url = `${API_HOST}/api/users`;\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    setUsers(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// ({\n//   ...prev,\n//   profile: {\n//     groups: data[\"groupsObj\"]\n//   }\n// })\n\n/*** Group ************************************/\n\n// get a users groups by their username\nexport const getGroups = async (username, setGroups) => {\n  const url = `${API_HOST}/api/groups/${username}`;\n  let data;\n  try {\n    const response = await fetch(url);\n    data = await response.json();\n    setGroups(data[\"groupsObj\"]);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// create a new group for a user\nexport const createGroup = async (username, newGroup, setUserObj) => {\n  console.log(newGroup);\n  const url = `${API_HOST}/api/groups/${username}`;\n  const request = new Request(url, {\n    method: \"post\",\n    body: JSON.stringify({ newGroup }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  let data;\n  try {\n    const response = await fetch(request);\n    data = await response.json();\n    let newGroups = data.updatedUser.profile.groups;\n    setUserObj((prev) => ({\n      ...prev,\n      profile: {\n        ...prev.profile,\n        groups: newGroups,\n      },\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n  // get groups will be called in a useEffect callback in dashboard page\n};\n\n/*** Tasks ************************************/\n\n// get all the tasks for a group\nexport const getTasks = async (group, setTasks) => {\n  const url = `${API_HOST}/api/task/${group._id}`;\n  console.log(\"getTasks gid: \", group._id);\n  let data;\n  try {\n    const response = await fetch(url);\n    data = await response.json();\n    setTasks(data.tasks);\n    console.log(\"getTasks\", data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// create a task for a group\nexport const createTask = async (group, newTask, setGroup) => {\n  console.log(newTask);\n  const url = `${API_HOST}/api/task/${group._id}`;\n  const request = new Request(url, {\n    method: \"post\",\n    body: JSON.stringify({ newTask }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  let data;\n  try {\n    const response = await fetch(request);\n    data = await response.json();\n    setGroup((prev) => ({\n      ...prev,\n      tasks: data.group.tasks,\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// update Tasks for a group\nexport const updateTask = async (group, task, newTask, setTasks) => {\n  console.log(group, task, newTask);\n  const url = `${API_HOST}/api/task/${task._id}`;\n  const request = new Request(url, {\n    method: \"put\",\n    body: JSON.stringify({ newTask, groupID: group._id }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  let tasks;\n  try {\n    const response = await fetch(request);\n    tasks = await response.json();\n    console.log(tasks);\n    setTasks(tasks.tasks);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/*** Discussion ************************************/\n\n// get all the tasks for a group\nexport const getDiscussions = async (group, setTasks) => {\n  const url = `${API_HOST}/api/discussion/${group._id}`;\n  console.log(\"getDiscussions gid: \", group._id);\n  let data;\n  try {\n    const response = await fetch(url);\n    data = await response.json();\n    setTasks(data.discussions);\n    console.log(\"getDiscussions\", data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const sortByDate = (a, b) => {\n  return new Date(b.dateAdded) - new Date(a.dateAdded);\n};\n","import React, { useState, useEffect } from \"react\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport \"./styles/filterStyle.css\";\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport FindFilterForm from \"./FindFilterForm\";\nimport { getAllCourses, getAllPrograms } from \"../../actions/user\";\nconst FindFilter = ({ filter, setfilter }) => {\n  // retrieve all couress and programs data\n  const [allCourses, setAllCourses] = useState([]);\n  const [allPrograms, setAllPrograms] = useState([]);\n\n  const [course, setCourse] = useState(\"\");\n  const [program, setProgram] = useState(\"\");\n\n  useEffect(() => {\n    getAllCourses(setAllCourses);\n    getAllPrograms(setAllPrograms);\n  }, []);\n\n  const handleClose = (setAnchor) => {\n    setAnchor(null);\n  };\n\n  const handleCourse = (e) => {\n    e.preventDefault();\n    setfilter((prev) => ({ ...prev, courses: [...prev[\"courses\"], course] }));\n    setCourse(\"\");\n  };\n\n  const handleProgram = (e) => {\n    e.preventDefault();\n    setfilter((prev) => ({\n      ...prev,\n      programs: [...prev[\"programs\"], program],\n    }));\n    setProgram(\"\");\n  };\n\n  const filterYear = (year) => {\n    if (filter[\"years\"].includes(year)) {\n      setfilter((prev) => ({\n        ...prev,\n        years: prev[\"years\"].filter((x) => x !== year),\n      }));\n    } else {\n      setfilter((prev) => ({\n        ...prev,\n        years: [...prev[\"years\"], year],\n      }));\n    }\n  };\n\n  const handleYear = (e) => {\n    console.log(typeof e.target.value);\n    const year = parseInt(e.target.value);\n    switch (year) {\n      case 1:\n        filterYear(year);\n        break;\n      case 2:\n        filterYear(year);\n        break;\n      case 3:\n        filterYear(year);\n        break;\n      case 4:\n        filterYear(year);\n        break;\n      default:\n        console.log(\"defaulted, something went wrong!\");\n    }\n  };\n\n  const handleRemoveFilter = (e, filterType) => {\n    if (e.target.previousElementSibling) {\n      let filterToRemove = e.target.previousElementSibling.innerText;\n      console.log(filterToRemove);\n      setfilter((prev) => ({\n        ...prev,\n        [filterType]: prev[filterType].filter((x) => x !== filterToRemove),\n      }));\n    }\n  };\n\n  useEffect(() => {\n    console.log(filter);\n  }, [filter]);\n\n  return (\n    <div className=\"filterRoot\">\n      <h4> Courses </h4>\n      <FindFilterForm\n        handleCourse={handleCourse}\n        setCourse={setCourse}\n        value={course}\n        type=\"courses\"\n        list={allCourses}\n      />\n      {filter[\"courses\"].map((course, index) => {\n        return (\n          <div key={index}>\n            <p> {course} </p>\n            <CloseIcon onClick={(e) => handleRemoveFilter(e, \"courses\")} />\n          </div>\n        );\n      })}\n      <h4> Program </h4>\n      <FindFilterForm\n        handleCourse={handleProgram}\n        setCourse={setProgram}\n        value={program}\n        type=\"programs\"\n        list={allPrograms}\n      />\n      {filter[\"programs\"].map((program, index) => {\n        return (\n          <div key={index}>\n            <p> {program} </p>\n            <CloseIcon onClick={(e) => handleRemoveFilter(e, \"programs\")} />\n          </div>\n        );\n      })}\n\n      <h4> Year </h4>\n      <form className=\"filterYear\">\n        <div>\n          <input\n            onClick={(e) => handleYear(e)}\n            type=\"checkbox\"\n            id=\"year1\"\n            name=\"year1\"\n            value={1}\n          />\n          <label htmlFor=\"year1\"> First </label>\n        </div>\n\n        <div>\n          <input\n            onClick={(e) => handleYear(e)}\n            type=\"checkbox\"\n            id=\"year2\"\n            name=\"year2\"\n            value={2}\n          />\n          <label htmlFor=\"year2\"> Second </label>\n        </div>\n\n        <div>\n          <input\n            onClick={(e) => handleYear(e)}\n            type=\"checkbox\"\n            id=\"year3\"\n            name=\"year3\"\n            value={3}\n          />\n          <label htmlFor=\"year3\"> Third </label>\n        </div>\n\n        <div>\n          <input\n            onClick={(e) => handleYear(e)}\n            type=\"checkbox\"\n            id=\"year4\"\n            name=\"year4\"\n            value={4}\n          />\n          <label htmlFor=\"year4\"> Fourth </label>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default FindFilter;\n","export const defaultModel = {\n    _id: \"\",\n    username: \"defaultUsername\",\n    password: \"defaultPassword\",\n    profile: {\n        role: \"user\",\n        name: \"defaultName\",\n        year: 1,\n        courses: [],\n        program: \"defaultProgram\",\n        bio: \"\",\n        profileImg: \"\",\n        groups: [],\n        friends: [],\n        wantToMatch: [],\n        rejected: [],\n        notifications: []\n    },\n}","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport FindItem from \"./FindItem\";\nimport FindModal from \"./FindModal\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport FindFilter from \"./FindFilter\";\nimport Divider from \"@mui/material/Divider\";\nimport \"./styles/itemStyle.css\";\nimport {\n  getAllUsers,\n  getUser,\n  updateUser,\n  sendNotification,\n} from \"../../actions/user\";\nimport { defaultModel } from \"../../actions/defaultModel\";\n\n// taken from material UI snack bar example\nconst Alert = React.forwardRef((props, ref) => {\n  return <MuiAlert elevation={6} ref={ref} {...props} />;\n});\n// end\n\nconst Find = ({ currentUser }) => {\n  const obs = useRef();\n  const [users, setUsers] = useState([]);\n  const [currentUserObj, setCurrentUserObj] = useState(defaultModel);\n  const [displayedUsers, setDisplayedUsers] = useState([]);\n  const [displayPointer, setDisplayPointer] = useState({ start: 0, end: 8 });\n  const [openModal, setOpenModal] = useState(false);\n  const [selectedUser, setSelectedUser] = useState();\n  const [openAlert, setOpenAlert] = useState(false);\n  const [acceptedSignal, setAcceptedSignal] = useState(null);\n  const [filter, setfilter] = useState({\n    courses: [],\n    programs: [],\n    years: [],\n  });\n  const [filteredUsers, setFilteredUsers] = useState([]);\n\n  useEffect(() => {\n    getUser(currentUser, setCurrentUserObj);\n    getAllUsers(setUsers);\n  }, [currentUser]);\n\n  useEffect(() => {\n    handleDisplayedUsers();\n  }, [displayPointer, users]);\n\n  const handleDisplayedUsers = () => {\n    setDisplayedUsers((prev) => {\n      let otherUsers = users.filter((otherUser) => {\n        return otherUser._id !== currentUserObj._id;\n      });\n      return [\n        ...prev,\n        ...otherUsers.slice(displayPointer[\"start\"], displayPointer[\"end\"]),\n      ];\n    });\n  };\n\n  const lastUserRef = useCallback((node) => {\n    if (obs.current) {\n      obs.current.disconnect();\n    }\n    obs.current = new IntersectionObserver((x) => {\n      if (x[0].isIntersecting) {\n        console.log(\"at bottom\");\n        setDisplayPointer((prev) => {\n          return { start: prev[\"end\"], end: prev[\"end\"] + 8 };\n        });\n      }\n    });\n    if (node) obs.current.observe(node);\n  }, []);\n\n  const handleModal = (index) => {\n    setSelectedUser(filteredUsers[index]);\n    setOpenModal(true);\n  };\n\n  const sendMatch = (recipientID) => {\n    const notification = {\n      senderID: currentUserObj[\"_id\"],\n      recipientID: recipientID,\n      content: `${currentUser} wants to match with you!`,\n    };\n    sendNotification(notification);\n  };\n\n  useEffect(() => {\n    // wantToMatch and rejected are being updated\n    // call updateUser\n    if (currentUserObj !== defaultModel) {\n      updateUser(currentUser, currentUserObj);\n    }\n  }, [currentUser, currentUserObj]);\n\n  const handleRejectAccept = (accepted, chosenUser) => {\n    const otherID = chosenUser[\"_id\"];\n    if (accepted) {\n      if (currentUserObj[\"profile\"][\"wantToMatch\"].includes(otherID)) {\n        return;\n      }\n      // modify the userobj here...\n      // user accepted\n      // remove user from rejected array, and add them to wantToMatch array\n      if (currentUserObj[\"profile\"][\"rejected\"].includes(otherID)) {\n        setCurrentUserObj((prev) => ({\n          ...prev,\n          profile: {\n            ...prev[\"profile\"],\n            rejected: prev[\"profile\"][\"rejected\"].filter(\n              (user) => user !== otherID\n            ),\n          },\n        }));\n      }\n      // add user to wantToMatch array\n      setCurrentUserObj((prev) => ({\n        ...prev,\n        profile: {\n          ...prev[\"profile\"],\n          wantToMatch: [...prev[\"profile\"][\"wantToMatch\"], otherID],\n        },\n      }));\n      setOpenAlert(true);\n      setAcceptedSignal(true);\n      sendMatch(otherID);\n    } else {\n      // user rejected\n      if (currentUserObj[\"profile\"][\"rejected\"].includes(otherID)) {\n        return;\n      }\n      if (currentUserObj[\"profile\"][\"wantToMatch\"].includes(otherID)) {\n        setCurrentUserObj((prev) => ({\n          ...prev,\n          profile: {\n            ...prev[\"profile\"],\n            wantToMatch: prev[\"profile\"][\"wantToMatch\"].filter(\n              (user) => user !== otherID\n            ),\n          },\n        }));\n      }\n      setCurrentUserObj((prev) => ({\n        ...prev,\n        profile: {\n          ...prev[\"profile\"],\n          rejected: [...prev[\"profile\"][\"rejected\"], otherID],\n        },\n      }));\n      setOpenAlert(true);\n      setAcceptedSignal(false);\n    }\n    // send a put request here...\n  };\n\n  const handleCloseAlert = () => {\n    setOpenAlert(false);\n  };\n\n  const filterUsers = (displayedUsers) => {\n    if (currentUserObj) {\n      return displayedUsers.filter((x) => {\n        let isAdmin = x[\"profile\"][\"role\"] === \"admin\";\n        let isCourses = x[\"profile\"][\"courses\"].some((course) =>\n          filter[\"courses\"].includes(course)\n        );\n        let isProgram = filter[\"programs\"].includes(x[\"profile\"][\"program\"]);\n        let isYear = filter[\"years\"].includes(x[\"profile\"][\"year\"]);\n        let isFriends = currentUserObj[\"profile\"][\"friends\"].includes(x[\"_id\"]);\n        if (isFriends) {\n          // console.log(\"isFriends\", x[\"profile\"]);\n          isFriends = true;\n        }\n        if (filter[\"years\"].length === 0) {\n          isYear = true;\n        }\n        if (filter[\"programs\"].length === 0) {\n          isProgram = true;\n        }\n        if (filter[\"courses\"].length === 0) {\n          isCourses = true;\n        }\n        return isCourses && isYear && isProgram && !isFriends && !isAdmin;\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (currentUserObj) {\n      setFilteredUsers(filterUsers(displayedUsers));\n    }\n  }, [filter, users, displayedUsers, currentUserObj]);\n\n  return (\n    <div id=\"findRoot\" style={{ display: \"flex\" }}>\n      <FindFilter filter={filter} setfilter={setfilter} />\n\n      <Divider orientation=\"vertical\" flexItem style={{ margin: \"0 1.5rem\" }} />\n\n      {/* -- taken from material UI snackbar example --*/}\n      <Snackbar\n        open={openAlert}\n        autoHideDuration={6000}\n        onClose={handleCloseAlert}\n      >\n        <Alert\n          iconMapping={{\n            error: <CancelIcon fontSize=\"inherit\" />,\n          }}\n          onClose={handleCloseAlert}\n          severity={acceptedSignal ? \"success\" : \"error\"}\n          sx={{ width: \"100%\" }}\n        >\n          {acceptedSignal ? \"Match Sent\" : \"Match Rejected\"}\n        </Alert>\n      </Snackbar>\n      {/* -- end -- */}\n      <Grid\n        container\n        columns={{ xs: 5, md: 8 }}\n        rowSpacing={1}\n        columnSpacing={1}\n      >\n        {currentUserObj ? (\n          filteredUsers.map((item, index) => {\n            const wantToMatch = currentUserObj[\"profile\"][\"wantToMatch\"];\n            const rejected = currentUserObj[\"profile\"][\"rejected\"];\n            let lastItem = index === filteredUsers.length - 1;\n            // console.log(filteredUsers);\n\n            if (wantToMatch.includes(item[\"_id\"])) {\n              // if this user is has already been selected as a desired match\n              return (\n                <Grid\n                  onClick={() => {\n                    handleModal(index);\n                  }}\n                  item\n                  xs={1}\n                  key={index}\n                >\n                  <div className=\"itemContainer-accepted\">\n                    <FindItem user={item} opacity={true} />\n                  </div>\n                </Grid>\n              );\n            }\n\n            // if this user is someone they don't wanna match with\n            if (rejected.includes(item[\"_id\"])) {\n              return (\n                <Grid\n                  onClick={() => {\n                    handleModal(index);\n                  }}\n                  item\n                  xs={1}\n                  key={index}\n                >\n                  <div className=\"itemContainer-rejected\">\n                    <FindItem user={item} opacity={true} />\n                  </div>\n                </Grid>\n              );\n            }\n\n            if (lastItem) {\n              return (\n                <Grid\n                  onClick={() => {\n                    handleModal(index);\n                  }}\n                  ref={lastUserRef}\n                  item\n                  xs={1}\n                  key={index}\n                >\n                  <FindItem user={item} opacity={false} />\n                </Grid>\n              );\n            }\n            // untouched users\n            else {\n              return (\n                <Grid\n                  onClick={() => {\n                    handleModal(index);\n                  }}\n                  item\n                  xs={1}\n                  key={index}\n                >\n                  <FindItem user={item} opacity={false} />\n                </Grid>\n              );\n            }\n          })\n        ) : (\n          <h1>loading resources...</h1>\n        )}\n        {/* {loading && <Grid item xs={1}><CircularProgress style={{ height: \"45px\" }} /></Grid>} */}\n      </Grid>\n      {openModal && (\n        <FindModal\n          handleRejectAccept={handleRejectAccept}\n          openModal={openModal}\n          setOpenModal={setOpenModal}\n          user={selectedUser}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Find;\n","import React from \"react\";\nimport Find from \"../../components/Find/Find\";\n// import FindHeader from \"../components/Find/FindHeader\";\n// import FindBody from \"../components/Find/FindBody\"\nimport \"./findStyle.css\";\n\nconst FindPage = ( {users, currentUser} ) => {\n  \n  return (\n    <div className=\"FindPage-root\">\n      {/* {selectedUser[\"username\"]} */}\n      {/* <FindHeader selectedUser={selectedUser} />\n      <FindBody users={users} handleSelect={handleSelect}/> */}\n\n\n      <Find currentUser={currentUser}/>\n    </div>\n  );\n};\n\nexport default FindPage;\n","import React from \"react\";\nimport \"./styleHome.css\";\nimport Button from '@mui/material/Button';\nimport { useHistory } from 'react-router-dom';\n\n\nconst Home = () => {\n\n  const history = useHistory();\n\n  const handleGetStarted = () => {\n    console.log(\"clicked\")\n    history.push(\"/login\")\n  }\n  return (\n    <div className=\"homePage-root\">\n      <div className=\"homePage-leftSide\">\n        <h1>Find Your Ideal Study Partner!</h1>\n        <p> Yeah this is the bio I don't know what to put here right now so I'm just typing random stuff to take up space. </p>\n        <Button onClick={handleGetStarted} size=\"large\" className=\"homePage-button\" variant=\"outlined\"> Get started </Button>\n      </div>\n      <div className=\"homePage-rightSide\">\n        <div className=\"homePage-imageContainer\">\n          <img className=\"homePage-image\" src=\"https://cdn.discordapp.com/attachments/868912885852700722/906023960964137011/502-5020971_studying-cat-png-transparent-png-removebg-preview.png\" alt=\"cat reading book\"/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavItem({ children, linkClass, to, item, outerDiv, drop}) {\n  let isDropped;\n  let setIsDropped;\n  let setOtherDropped;\n  if (drop) {\n    ({ isDropped, setIsDropped, setOtherDropped } = drop);\n  }\n  const openMenu = () => {\n    if (setIsDropped) {\n      setIsDropped(!isDropped);\n      setOtherDropped(false);\n    }\n  };\n\n  return (\n    <div className={outerDiv}>\n      <Link className={linkClass} to={to} onClick={openMenu}>\n        {item}\n      </Link>\n      {isDropped && children}\n    </div>\n  );\n}\n\nexport default NavItem;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CgProfile } from \"react-icons/cg\";\nimport { BsFillGearFill } from \"react-icons/bs\";\nimport { BiLogOutCircle } from \"react-icons/bi\";\nimport { MdDashboard } from \"react-icons/md\";\nimport { Divider } from \"@mui/material\";\n\nconst ProfileMenu = ({ handleLogout }) => {\n  return (\n    <div className=\"profileMenu\">\n      <ProfileMenuItem to=\"/profile\" leftIcon={<CgProfile />}>\n        {\" \"}\n        Profile{\" \"}\n      </ProfileMenuItem>\n      <ProfileMenuItem to=\"/\" leftIcon={<MdDashboard />}>\n        Dashboard\n      </ProfileMenuItem>\n      {/* <ProfileMenuItem to=\"#\" leftIcon={<BsFillGearFill/>}>\n        Settings\n      </ProfileMenuItem> */}\n      <Divider />\n      <ProfileMenuItem\n        handleLogout={handleLogout}\n        leftIcon={<BiLogOutCircle />}\n        to=\"/\"\n      >\n        Logout\n      </ProfileMenuItem>\n    </div>\n  );\n};\n\nconst ProfileMenuItem = ({ children, to, leftIcon, handleLogout }) => {\n  return (\n    <Link\n      onClick={handleLogout && handleLogout}\n      to={to}\n      className=\"profileItem\"\n    >\n      <span className=\"leftIcon\"> {leftIcon} </span>\n      <span>{children}</span>\n    </Link>\n  );\n};\n\nexport default ProfileMenu;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Divider } from \"@mui/material\";\nimport { getNotifications } from \"../../actions/user\";\n\n\nconst notificationsModel = [{\n  senderID: \"sender\",\n  recipientID: \"recipient\",\n  content: \"loading...\"\n}]\n\nconst Notifications = ({ currentUser, handleModal }) => {\n  const [notifications, setNotifications] = useState(notificationsModel)\n\n  // load in the notifications at the beginning\n  useEffect(async () => {\n    const notifications = await getNotifications(currentUser)\n    setNotifications(notifications)\n  }, []);\n\n\n  return (\n    <div className=\"notifications\">\n      <h3>Notifications</h3>\n      <Divider />\n      {notifications.map((notif, i) => {\n        return (\n          <NotificationsItem onMouseHover={() => console.log(\"hovering\")} onClick={() => handleModal(notif)} key={i} to=\"#\">{notif[\"content\"]}</NotificationsItem>\n        )\n      })}\n    </div>\n  );\n};\n\nconst NotificationsItem = ({ children, to, leftIcon, onClick}) => {\n  return (\n    <>\n      <Link to={to} onClick={onClick} className=\"notifcationItem\">\n        <span>{children}</span>\n      </Link>\n    </>\n  );\n};\n\nexport default Notifications;\n","import React, {useState, useEffect} from \"react\";\nimport Modal from \"@mui/material/Modal\";\nimport Divider from \"@mui/material/Divider\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport \"../Find/styles/itemStyle.css\";\nimport { getUserByID } from \"../../actions/user\";\nimport { defaultModel } from \"../../actions/defaultModel\";\nconst OtherUserModal = ({\n  openModal,\n  setOpenModal,\n  userID,\n\thandleAcceptDecline\n}) => {\n\n\tconst [userObj, setUserObj] = useState(defaultModel);\n\n\tuseEffect(() => {\n\t\tgetUserByID(userID, setUserObj)\n\t}, [])\n\n\n\tconst handleClose = () => {\n    setOpenModal(false);\n  };\n\n  const handleAccept = () => {\n\t\tconsole.log(userObj)\n    handleAcceptDecline(true, userObj);\n    setOpenModal(false);\n  };\n\n  const handleReject = () => {\n\t\tconsole.log(userObj)\n    handleAcceptDecline(false, userObj);\n    setOpenModal(false);\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <Modal open={openModal} onClose={handleClose} footer={\"Footer\"}>\n        <div className=\"innerModalContainer\">\n          <div className=\"modalImageContainer\">\n            <img\n              className=\"modalImage\"\n              src={userObj[\"profile\"][\"profileImg\"]}\n              alt=\"profile\"\n            />\n          </div>\n          <div className=\"modalDesc\">\n            <div className=\"modalDesc-nameyear\">\n              <h3>{userObj[\"username\"]}</h3>\n              <span>{userObj[\"profile\"][\"year\"]}</span>\n            </div>\n            <p className=\"modalProgram\">{userObj[\"profile\"][\"program\"]}</p>\n            <div className=\"modalCourses\">\n              {userObj[\"profile\"][\"courses\"].map((item, index) => {\n                return <span key={index}>{item}</span>;\n              })}\n            </div>\n            <Divider className=\"modalDivider\" />\n            <p className=\"modalBio\"> {userObj[\"profile\"][\"bio\"]} </p>\n          </div>\n          <div className=\"modalEmptySpace\"></div>\n        </div>\n      </Modal>\n      <div className=\"modalButtonsContainer\">\n        <div className=\"modalButtons\">\n          <button\n            onClick={() => handleReject(false, userObj)}\n            className=\"modalRejectButton\"\n          >\n            <CancelIcon className=\"modalReject\" />\n          </button>\n          <button\n            onClick={() => handleAccept(true, userObj)}\n            className=\"modalAcceptButton\"\n          >\n            <CheckCircleIcon className=\"modalAccept\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OtherUserModal;\n","import React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport { AiFillBell } from \"react-icons/ai\";\nimport { CgProfile } from \"react-icons/cg\";\nimport NavItem from \"./NavItem\";\nimport ProfileMenu from \"./ProfileMenu\";\nimport Notifications from \"./Notifications\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  addFriend,\n  logout,\n  getUser,\n  removeNotification,\n} from \"../../actions/user\";\nimport OtherUserModal from \"./OtherUserModal\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { defaultModel } from \"../../actions/defaultModel\";\n\n// taken from material UI snack bar example\nconst Alert = React.forwardRef((props, ref) => {\n  return <MuiAlert elevation={6} ref={ref} {...props} />;\n});\n// end\nfunction Navbar({ auth, isAdmin, setCurrentUser, currentUser }) {\n  const [notifDrop, setNotifDrop] = useState(false);\n  const [profileDrop, setProfileDrop] = useState(false);\n  const [currentUserObj, setCurrentUserObj] = useState(defaultModel);\n  // notification modal states\n  const [openModal, setOpenModal] = useState(false);\n  const [selectedNotification, setSelectedNotification] = useState();\n\n  // snack bar\n  const [openAlert, setOpenAlert] = useState(false);\n  const [acceptedSignal, setAcceptedSignal] = useState(null);\n\n  let history = useHistory();\n\n  const handleCloseAlert = () => {\n    setOpenAlert(false);\n  };\n\n  useEffect(() => {\n    // get current user object everytime currentUser changes\n    getUser(currentUser, setCurrentUserObj);\n\n    return () => {\n      setSelectedNotification(null);\n      // setCurrentUserObj(null);\n    };\n  }, [currentUser]);\n\n  const handleLogout = () => {\n    logout(setCurrentUser);\n    history.push(\"/\");\n  };\n\n  // handle Modal for notification\n  const handleModal = (notif) => {\n    setSelectedNotification(notif);\n    setOpenModal(true);\n    setNotifDrop(false);\n  };\n\n  // run this when a user selects a notifications to click on\n  // accepts or declines the person (TAKES IN USERID RATHER THAN USERNAME!!!)\n  const handleAcceptDecline = (accepted, otherUserObj) => {\n    if (!currentUserObj) {\n      return\n    }\n    console.log(currentUserObj)\n    if (accepted) {\n      addFriend(currentUserObj, otherUserObj);\n      setAcceptedSignal(true)\n    } else {\n      setAcceptedSignal(false)\n    }\n    // send snackbar alert to user\n    setOpenAlert(true);\n    // remove notification in either cases\n    removeNotification(selectedNotification);\n  };\n\n  return (\n    <>\n      <div className=\"nav\">\n        {!isAdmin ? (\n          <>\n            <div className=\"navMenu\">\n              <NavItem\n                to=\"/\"\n                linkClass=\"link\"\n                item={<h3 className=\"logo\">Bindr</h3>}\n              />\n              <div className=\"linkMenu\">\n                <NavItem to=\"find\" linkClass=\"link\" item=\"Find\" />\n              </div>\n            </div>\n            {auth ? (\n              <div className=\"navButton\">\n                <NavItem\n                  to=\"#\"\n                  outerDiv=\"notifDiv\"\n                  linkClass=\"link iconButton\"\n                  drop={{\n                    isDropped: notifDrop,\n                    setIsDropped: setNotifDrop,\n                    setOtherDropped: setProfileDrop,\n                  }}\n                  item={<AiFillBell className=\"bellIcon\" />}\n                >\n                  <Notifications\n                    handleModal={handleModal}\n                    currentUser={currentUser}\n                  />\n                </NavItem>\n                <NavItem\n                  to=\"#\"\n                  outerDiv=\"profileDiv\"\n                  linkClass=\"link iconButton\"\n                  drop={{\n                    isDropped: profileDrop,\n                    setIsDropped: setProfileDrop,\n                    setOtherDropped: setNotifDrop,\n                  }}\n                  item={<CgProfile className=\"profileIcon\" />}\n                >\n                  {/* dropdown */}\n                  <ProfileMenu handleLogout={handleLogout} />\n                </NavItem>\n              </div>\n            ) : (\n              <div className=\"navButton\">\n                <NavItem to=\"signup\" linkClass=\"link\" item=\"Sign up\" />\n                <NavItem to=\"login\" linkClass=\"link login\" item=\"Login\" />\n              </div>\n            )}\n          </>\n        ) : (\n          <>\n            <div className=\"navMenu\">\n              <NavItem\n                to=\"/\"\n                linkClass=\"link\"\n                item={<h3 className=\"logo\">Logo</h3>}\n              />\n              <div className=\"linkMenu\">\n                <NavItem to=\"reports\" linkClass=\"link\" item=\"Reports\" />\n              </div>\n              <div className=\"linkMenu\">\n                <NavItem to=\"users\" linkClass=\"link\" item=\"Users\" />\n              </div>\n            </div>\n            <div className=\"navButton\" onClick={handleLogout}>\n              <NavItem to=\"#\" linkClass=\"link\" item=\"Logout\" />\n            </div>\n          </>\n        )}\n        {openModal && (\n          <OtherUserModal\n            handleAcceptDecline={handleAcceptDecline}\n            openModal={openModal}\n            setOpenModal={setOpenModal}\n            userID={selectedNotification[\"senderID\"]}\n          />\n        )}\n        {/* -- taken from material UI snackbar example --*/}\n        <Snackbar\n          open={openAlert}\n          autoHideDuration={6000}\n          onClose={handleCloseAlert}\n        >\n          <Alert\n            iconMapping={{\n              error: <CancelIcon fontSize=\"inherit\" />,\n            }}\n            onClose={handleCloseAlert}\n            severity={acceptedSignal ? \"success\" : \"error\"}\n            sx={{ width: \"100%\" }}\n          >\n            {acceptedSignal ? \"Friend Added\" : \"Match Declined\"}\n          </Alert>\n        </Snackbar>\n        {/* -- end -- */}\n      </div>\n      {/* <Divider className=\"navBar-Divider\"/> */}\n    </>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport Button from '@mui/material/Button';\n\nconst LoginForm = ({ handleSubmit, info, setInfo }) => {\n  return (\n    <div className=\"loginForm-root\">\n      <form>\n        <label className=\"loginForm-input\">\n          <h5>Username</h5>\n          <input\n            type=\"text\"\n            onChange={(e) => setInfo({ ...info, username: e.target.value })}\n          />\n        </label>\n        <br />\n        <label className=\"loginForm-input\">\n          <h5>Password</h5>\n          <input\n            type=\"text\"\n            onChange={(e) => setInfo({ ...info, password: e.target.value })}\n          />\n        </label>\n        <div className=\"loginForm-submit\">\n          <Button type=\"submit\" variant=\"contained\" onClick={handleSubmit}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport LoginForm from \"./LoginForm\";\nimport \"./loginStyle.css\";\nimport { login } from \"../../actions/user\";\n\nconst Login = ({ setCurrentUser, setIsAdmin }) => {\n  const [info, setInfo] = useState({ username: \"\", password: \"\" });\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const res = await login(info, setCurrentUser);\n    if (res.login) {\n      console.log(res)\n      if (res.role === \"admin\") {\n        setIsAdmin(true)\n      }\n      history.push(\"/\");\n    } else {\n      alert(res.message)\n    }\n  };\n\n  return (\n    <div className=\"loginRoot\">\n      <h1> Login </h1>\n      <LoginForm handleSubmit={handleSubmit} info={info} setInfo={setInfo} />\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport Login from \"../components/Login/Login\";\n\nfunction LoginPage({setCurrentUser, setIsAdmin }) {\n\n  return (\n    <Login setCurrentUser={setCurrentUser} setIsAdmin={setIsAdmin}/>\n  );\n}\n\nexport default LoginPage;\n","import { Button } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport { defaultModel } from \"../../actions/defaultModel\";\nimport { getUserByID } from \"../../actions/user\";\nimport \"./styles/friendStyle.css\";\n\nconst Friend = ({ friend, rightSide }) => {\n  const [user, setUser] = useState(defaultModel);\n\n  useEffect(() => {\n    getUserByID(friend, setUser);\n  }, []);\n\n  return (\n    <div className=\"friend-root\">\n      <Button className=\"friend-itemContainer\">\n\t\t\t\t<div className=\"friend-profileImgContainer\">\n\t\t\t\t\t<img src={user[\"profile\"][\"profileImg\"]} />\n\t\t\t\t</div>\n        <h4>{user[\"username\"]}</h4>\n\n      </Button>\n    </div>\n  );\n};\n\nexport default Friend;\n","import { Button } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/groupStyle.css\"\n\nconst Group = ({ group, handleSelectedGroup }) => {\n  return (\n    <div className=\"group-root\">\n      <Button onClick={() => handleSelectedGroup(group)} className=\"group-itemContainer\">\n        <h4>{group[\"projectName\"]}</h4>\n      </Button>\n    </div>\n  );\n};\n\nexport default Group;\n","import React, { useState, useEffect } from \"react\";\nimport { defaultModel } from \"../../actions/defaultModel\";\nimport { getUserByID } from \"../../actions/user\";\nimport \"./styles/memberStyle.css\";\n\nconst Member = ({ member }) => {\n  const [user, setUser] = useState(defaultModel);\n  useEffect(() => {\n    getUserByID(member, setUser);\n  }, []);\n\n  return (\n    <div className=\"member-root\">\n      <div className=\"member-itemContainer\">\n        <div className=\"member-profileImgContainer\">\n          <img src={user[\"profile\"][\"profileImg\"]} />\n        </div>\n        <h4>{user[\"username\"]}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default Member;\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles/commentStyle.css\";\nconst Comment = ({ comment }) => {\n  return (\n    <div className=\"comment-root\">\n      <div className=\"comment-author\">\n\t\t\t\t<p>{comment.author}</p>\n\t\t\t</div>\n      <div className=\"comment-content\">\n\t\t\t<p>{comment.comment}</p>\n\t\t\t</div>\n    </div>\n  );\n};\n\nexport default Comment;\n","import { Button } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport Comment from \"./Comment\";\nimport { sortByDate } from \"../../actions/user\";\n\nconst Comments = ({ comments, task, handleAddComment }) => {\n  const [newComment, setNewComment] = useState(\"\");\n\n\t// sort the comments\n\tconst sortComment = (sortBy, comments) => {\n\t\tif (sortBy === \"latest\") { \n\t\t\treturn comments.sort((a, b) => sortByDate(a, b))\n\t\t}\n\t}\n  \n  return (\n    <div className=\"comments-root\">\n      <input\n        type=\"text\"\n        value={newComment}\n        onChange={(e) => setNewComment(e.target.value)}\n      />\n      <Button onClick={() => handleAddComment(newComment)}>Add Comment</Button>\n      {sortComment(\"latest\", comments).map((comment, index) => {\n        return <Comment key={index} comment={comment} />;\n      })}\n    </div>\n  );\n};\n\nexport default Comments;\n","import React, { useState, useEffect } from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { createComment, getUserByID, updateTask } from \"../../actions/user\";\nimport \"./styles/taskStyle.css\";\nimport { defaultModel } from \"../../actions/defaultModel\";\nimport Comments from \"./Comments\";\nimport { Divider } from \"@mui/material\";\n\nconst Task = ({ selectedGroup, task, setTasks, currentUser }) => {\n  const [useless, setUseless] = useState();\n  const [users, setUsers] = useState([defaultModel]);\n  useEffect(async () => {\n    let x = [];\n    for (const userID of task[\"users\"]) {\n      let data = await retrieveUsername(userID);\n      x.push(data);\n    }\n    setUsers(x);\n    // console.log(x);\n  }, []);\n\n  const handleCheck = (task, completed) => {\n    // update task in back end, then the useEffect will be called after setTasks is\n    const newTask = {\n      ...task,\n      completed: completed,\n    };\n    updateTask(selectedGroup, task, newTask, setTasks);\n  };\n\n  const handleAddComment = (newCommentContent) => {\n    if (!newCommentContent) {\n      alert(\"Comment can't be empty\")\n      return;\n    }\n    const newComment = {\n      author: currentUser,\n      comment: newCommentContent,\n      dateAdded: Date.now()\n    }\n    const newTask = {\n      ...task,\n      comments: [... task.comments, newComment]\n    }\n    console.log(newTask)\n    updateTask(selectedGroup, task, newTask, setTasks);\n\n  }\n\n  const retrieveUsername = async (userID) => {\n    let user = await getUserByID(userID, setUseless);\n    return user;\n  };\n\n  return (\n    <>\n      <Accordion className=\"task-root\">\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          className=\"task-summary\"\n        >\n          <div className=\"task-checkbox\">\n            <input\n              type=\"checkbox\"\n              onChange={() => handleCheck(task, !task[\"completed\"])}\n              value={task[\"completed\"]}\n            />\n          </div>\n\n          <p>{task[\"name\"]}</p>\n        </AccordionSummary>\n        <Divider />\n        <AccordionDetails>\n          <div className=\"task-details\">\n            <p className=\"tasks-sideTitles\">Task</p>\n            <p>{task[\"name\"]}</p>\n          </div>\n          <div className=\"task-details\">\n            <p className=\"tasks-sideTitles\">Assigned</p>\n            {users.map((user) => {\n              return <span className=\"tasks-assignedUsers\" key={user.username}>{user.username + \"  \"} </span>;\n            })}\n          </div>\n          <div className=\"task-details\">\n            <p className=\"tasks-sideTitles\">Desc</p>\n            <p>{task[\"desc\"]}</p>\n          </div>\n          <div className=\"task-details\">\n            <p className=\"tasks-sideTitles\">Deadline</p>\n            <p>{task[\"deadline\"]}</p>\n          </div>\n          <Divider />\n          <div className=\"task-Comments\">\n            <p className=\"tasks-commentTitle\">Comments</p>\n            <Comments task={task} handleAddComment={handleAddComment} comments={task[\"comments\"]} />\n          </div>\n        </AccordionDetails>\n      </Accordion>\n    </>\n  );\n};\n\nexport default Task;\n","import React, { useState, useEffect } from \"react\";\nimport { Divider, IconButton, TextField } from \"@mui/material\";\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport Modal from \"@mui/material/Modal\";\nimport { Button } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport \"./styles/tasksStyle.css\";\nimport Member from \"./Member\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\nimport { createTask, getTasks } from \"../../actions/user\";\nimport Task from \"./Task\";\n\nconst taskModel = {\n  // the id of the users that are responsible for this task\n  users: [],\n  name: \"\",\n  desc: \"\",\n  completed: false,\n  deadline: new Date(),\n  comments: [],\n};\n// mui styles\nconst useStyles = makeStyles({\n  modalItem: {\n    display: \"flex\",\n    alignItems: \"center\",\n    // height: \"10px\",\n    \"& input\": {\n      width: \"20px\",\n      height: \"20px\",\n    },\n  },\n  button: (props) => ({\n    width: \"100%\",\n    color: \"white\",\n    // flex-grow: 1;\n    margin: \"20px 0\",\n    background: props.color,\n    transition: \"filter 300ms\",\n    \"&:hover\": {\n      background: props.color,\n      filter: \"brightness(1.2)\",\n    },\n  }),\n});\n\nconst Tasks = ({ selectedGroup, setSelectedGroup, currentUser }) => {\n  const classes = useStyles({ color: \"#52b788\" });\n  const [tasks, setTasks] = useState(selectedGroup[\"tasks\"]);\n  const [finishedTasks, setFinishedTasks] = useState([]);\n  const [unfinishedTasks, setUnfinishedTasks] = useState([]);\n  // task creation\n  const [openModal, setOpenModal] = useState(false);\n  const [newTask, setNewTask] = useState(taskModel);\n\n  useEffect(() => {\n    // get the tasks\n    console.log(selectedGroup);\n    getTasks(selectedGroup, setTasks);\n    return () => {\n      console.log(\"unmounted tasks\");\n    };\n  }, [selectedGroup]);\n\n  useEffect(() => {\n    // filter the tasks everytime tasks is udpated\n    filterTasks(tasks, setFinishedTasks, setUnfinishedTasks);\n  }, [tasks]);\n\t\n\tconsole.log(tasks)\n\t\n  const filterTasks = (tasks, setFinishedTasks, setUnfinishedTasks) => {\n    let unfinished = tasks.filter((task) => task.completed === false);\n    let finished = tasks.filter((task) => task.completed === true);\n    setUnfinishedTasks(unfinished);\n    setFinishedTasks(finished);\n  };\n\n  // ***************** handlers ******************* //\n\n  const handleModal = (open) => {\n    setOpenModal(open);\n  };\n\n  const handleCreateTask = () => {\n    if (!newTask[\"name\"]) {\n      alert(\"Must select a task name!\");\n      return;\n    }\n\n    if (newTask[\"users\"].length === 0) {\n      alert(\"Must assign at least one member\");\n      return;\n    }\n\n    if (!newTask[\"desc\"]) {\n      alert(\"Must provide a description\");\n      return;\n    }\n    // call createTask to create and add the task\n    createTask(selectedGroup, newTask, setSelectedGroup);\n\n    // reset newTask back to model and close the modal\n    setNewTask(taskModel);\n    setOpenModal(false);\n  };\n\n  const handleModalName = (name) => {\n    setNewTask((prev) => ({\n      ...prev,\n      name: name,\n    }));\n  };\n\n  const handleModalDeadline = (date) => {\n    setNewTask((prev) => ({\n      ...prev,\n      deadline: date,\n    }));\n  };\n\n  const handleModalDesc = (desc) => {\n    setNewTask((prev) => ({\n      ...prev,\n      desc: desc,\n    }));\n  };\n\n  const handleAssignMembers = (member) => {\n    if (newTask[\"users\"].includes(member)) {\n      setNewTask((prev) => ({\n        ...prev,\n        users: prev[\"users\"].filter((item) => item !== member),\n      }));\n    } else {\n      setNewTask((prev) => ({\n        ...prev,\n        users: [...new Set([...prev[\"users\"], member])],\n      }));\n    }\n  };\n\n  return (\n    <div className=\"tasks-root\">\n      <div className=\"tasks-allTasks\">\n        <div className=\"tasks-unfinishedTasks\">\n          <p className=\"tasks-sideTitle\">Todo</p>\n          <div className=\"tasks-taskItems\">\n            {unfinishedTasks.map((task, index) => {\n              return (\n                <Task\n                  currentUser={currentUser}\n                  key={task._id}\n                  selectedGroup={selectedGroup}\n                  task={task}\n                  setTasks={setTasks}\n                />\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"tasks-finishedTasks\">\n          <p className=\"tasks-sideTitle\">Finished</p>\n          <div className=\"tasks-taskItems\">\n            {finishedTasks.map((task, index) => {\n              return (\n                <Task\n                  currentUser={currentUser}\n                  key={task._id}\n                  selectedGroup={selectedGroup}\n                  task={task}\n                  setTasks={setTasks}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* **************** Creating tasks ********************* */}\n      <div className=\"tasks-createButton\">\n        <IconButton\n          onClick={() => handleModal(true)}\n          color=\"primary\"\n          size=\"small\"\n        >\n          <AddCircleIcon fontSize=\"large\" color=\"primary\" />\n        </IconButton>\n      </div>\n      <Modal open={openModal} onClose={() => handleModal(false)}>\n        <div className=\"tasks-modal\">\n          <div className=\"tasks-modalBody\">\n            <h3>Task Name</h3>\n            <div className=\"tasks-modalName\">\n              <input\n                type=\"text\"\n                onChange={(e) => handleModalName(e.target.value)}\n                value={newTask[\"name\"]}\n                placeholder=\"task name\"\n              />\n            </div>\n            <h3>Task Description</h3>\n\n            <div className=\"tasks-modalDesc\">\n              <textarea\n                type=\"text\"\n                onChange={(e) => handleModalDesc(e.target.value)}\n                maxLength={150}\n                value={newTask[\"desc\"]}\n                placeholder=\"task description\"\n              />\n            </div>\n            <h3>Deadline</h3>\n            <div className=\"tasks-modalDeadline\">\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateTimePicker\n                  renderInput={(props) => (\n                    <TextField fullWidth={true} {...props} />\n                  )}\n                  value={newTask[\"deadline\"]}\n                  onChange={(newValue) => {\n                    handleModalDeadline(newValue);\n                  }}\n                />\n              </LocalizationProvider>\n            </div>\n            <h3>Assign Members</h3>\n            <div className=\"tasks-modalMembers\">\n              {selectedGroup[\"members\"].map((member, index) => {\n                return (\n                  <div key={index} className=\"tasks-modalCheckbox\">\n                    <input\n                      type=\"checkbox\"\n                      onChange={() => handleAssignMembers(member)}\n                      value={member}\n                    />\n                    <Member key={index} member={member} />\n                  </div>\n                );\n              })}\n            </div>\n            <Divider />\n          </div>\n\t\t\t\t\t<Divider />\n\n          <div className=\"tasks-modalFooter\">\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              onClick={handleCreateTask}\n            >\n              Create Task\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Tasks;\n","import React from \"react\";\nimport Member from \"./Member\";\n\nconst Members = ({ members }) => {\n  console.log(members);\n  return (\n    <div className=\"members-root\">\n      {members.map((member, index) => {\n        return (\n          <div className=\"members-memberContainer\">\n            <Member key={member.username} member={member} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Members;\n","import React, { useState, useEffect } from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport \"./styles/discussionStyle.css\";\nimport { defaultModel } from \"../../actions/defaultModel\";\nimport Comments from \"./Comments\";\nimport { Button, Divider } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles({\n  modalItem: {\n    display: \"flex\",\n    alignItems: \"center\",\n    // height: \"10px\",\n    \"& input\": {\n      width: \"20px\",\n      height: \"20px\",\n    },\n  },\n  button: (props) => ({\n    width: \"100%\",\n    color: \"white\",\n    // flex-grow: 1;\n    margin: \"20px 0\",\n    background: props.color,\n    transition: \"filter 300ms\",\n    \"&:hover\": {\n      background: props.color,\n      filter: \"brightness(1.2)\",\n    },\n  }),\n  title: {\n    fontWeight: \"bold\",\n  },\n  desc: {\n    wordBreak: \"break-word\",\n  },\n});\n\nconst Discussion = ({ discussion, currentUser }) => {\n  const classes = useStyles({ color: \"#52b788\" });\n  const [useless, setUseless] = useState();\n  const [users, setUsers] = useState([defaultModel]);\n  const [comments, setComments] = useState([]);\n\tconst [newComment, setNewComment] = useState(\"\");\n\n  const handleAddComment = (newCommentContent) => {\n    if (!newCommentContent) {\n      alert(\"Comment can't be empty\");\n      return;\n    }\n    const newComment = {\n      author: currentUser,\n      comment: newCommentContent,\n      dateAdded: Date.now(),\n    };\n    const newTask = {\n      ...discussion,\n      comments: [...discussion.comments, newComment],\n    };\n    console.log(newTask);\n  };\n\n  return (\n    <>\n      <Accordion className=\"discussion-root\">\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          className=\"discussion-summary\"\n        >\n          <p className={classes.title}>{discussion[\"title\"]}</p>\n          <span className=\"discussion-date\">\n            Date posted: {discussion[\"dateAdded\"]}\n          </span>\n        </AccordionSummary>\n        <Divider />\n        <AccordionDetails>\n          <div className=\"discussion-details\">\n            <p className={classes.title}>{discussion[\"title\"]}</p>\n          </div>\n          <div className=\"discussion-details\">\n            <p className={classes.desc}>{discussion[\"desc\"]}</p>\n          </div>\n          <Divider />\n          <div className=\"discussion-Comments\">\n            <p className=\"tasks-commentTitle\">Comments</p>\n\t\t\t\t\t\t<input value={newComment} onChange={(e) => setNewComment(e.target.value)} />\n\t\t\t\t\t<Button onClick={() => setComments(prev => [newComment, ...prev])}>Add Comment</Button>\n            {comments.map((comment, i) => {\n              return (\n                <div key={i}>\n                  <span className=\"discussion-span1\">{currentUser}</span>\n                  <span className=\"discussion-span2\">{comment}</span>\n                </div>\n              );\n            })}\n          </div>\n        </AccordionDetails>\n      </Accordion>\n    </>\n  );\n};\n\nexport default Discussion;\n","import React, { useState, useEffect } from \"react\";\nimport Discussion from \"./Discussion\";\nimport { Divider, IconButton, TextField } from \"@mui/material\";\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport Modal from \"@mui/material/Modal\";\nimport { Button } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport \"./styles/discussionsStyle.css\";\nconst discussionModel = {\n  title: \"\",\n  desc: \"\",\n  dateAdded: new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }),\n  comments: [],\n};\n\nconst useStyles = makeStyles({\n  modalItem: {\n    display: \"flex\",\n    alignItems: \"center\",\n    // height: \"10px\",\n    \"& input\": {\n      width: \"20px\",\n      height: \"20px\",\n    },\n  },\n  button: (props) => ({\n    width: \"100%\",\n    color: \"white\",\n    // flex-grow: 1;\n    margin: \"20px 0\",\n    background: props.color,\n    transition: \"filter 300ms\",\n    \"&:hover\": {\n      background: props.color,\n      filter: \"brightness(1.2)\",\n    },\n  }),\n});\n\nconst Discussions = ({ currentUser, selectedGroup, setSelectedGroup }) => {\n  const classes = useStyles({ color: \"#52b788\" });\n  const [discussions, setDiscussions] = useState([]);\n\n  // task creation\n  const [openModal, setOpenModal] = useState(false);\n  const [newDiscussion, setNewDiscussion] = useState(discussionModel);\n\n  // ***************** handlers ******************* //\n\n\tuseEffect(() => {\n\t\tconsole.log(discussions)\n\t}, [discussions])\n\t\n  const handleModal = (open) => {\n    setOpenModal(open);\n  };\n\n  const handleCreateDiscussion = () => {\n    if (!newDiscussion[\"title\"]) {\n      alert(\"Must select a discussion title!\");\n      return;\n    }\n\n    if (!newDiscussion[\"desc\"]) {\n      alert(\"Must provide a description\");\n      return;\n    }\n    // call createTask to create and add the task\n\t\tsetDiscussions(prev => [...prev, newDiscussion])\n    // reset newDiscussion back to model and close the modal\n    setNewDiscussion(discussionModel);\n    setOpenModal(false);\n  };\n\n\t\n  const handleModalTitle = (title) => {\n    setNewDiscussion((prev) => ({\n      ...prev,\n      title: title,\n    }));\n  };\n\n  const handleModalDesc = (desc) => {\n    setNewDiscussion((prev) => ({\n      ...prev,\n      desc: desc,\n    }));\n  };\n\n\n  return (\n    <div className=\"discussions-root\">\n      <div className=\"discussions-allTasks\">\n\t\t\t\t{discussions.map((discussion, i) => {\n\t\t\t\t\treturn <Discussion currentUser={currentUser} discussion={discussion}/>\n\t\t\t\t})}\n\n\t\t\t</div>\n\n      {/* **************** Creating discussions ********************* */}\n      <div className=\"discussions-createButton\">\n        <IconButton\n          onClick={() => handleModal(true)}\n          color=\"primary\"\n          size=\"small\"\n        >\n          <AddCircleIcon fontSize=\"large\" color=\"primary\" />\n        </IconButton>\n      </div>\n      <Modal open={openModal} onClose={() => handleModal(false)}>\n        <div className=\"discussions-modal\">\n          <div className=\"discussions-modalBody\">\n            <h3>Title</h3>\n            <div className=\"discussions-modalName\">\n              <input\n                type=\"text\"\n                onChange={(e) => handleModalTitle(e.target.value)}\n                value={newDiscussion[\"title\"]}\n                placeholder=\"discussion name\"\n              />\n            </div>\n            <h3>Description</h3>\n            <div className=\"discussions-modalDesc\">\n              <textarea\n                type=\"text\"\n                onChange={(e) => handleModalDesc(e.target.value)}\n                maxLength={150}\n                value={newDiscussion[\"desc\"]}\n                placeholder=\"task description\"\n              />\n            </div>\n            <Divider />\n          </div>\n          <Divider />\n\n          <div className=\"discussions-modalFooter\">\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              onClick={handleCreateDiscussion}\n            >\n              Create Discussion\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Discussions;\n","import { Button, Divider } from \"@mui/material\";\nimport { createTheme, ThemeProvider, styled } from \"@mui/material/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport { defaultModel } from \"../../actions/defaultModel\";\nimport {\n  createGroup,\n  getFriends,\n  getGroups,\n  getUser,\n} from \"../../actions/user\";\nimport Friend from \"../../components/Dashboard/Friend\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport PropTypes from \"prop-types\";\nimport \"./dashboardPageStyle.css\";\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Modal from \"@mui/material/Modal\";\nimport { makeStyles } from \"@mui/styles\";\nimport Group from \"../../components/Dashboard/Group\";\nimport Tasks from \"../../components/Dashboard/Tasks\";\nimport Members from \"../../components/Dashboard/Members\";\nimport Discussions from \"../../components/Dashboard/Discussions\";\n\n// customize mui theme\nconst theme = createTheme({\n  palette: {\n    primary: { main: \"#52b788\" },\n  },\n});\n\n// mui styles\nconst useStyles = makeStyles({\n  modalItem: {\n    display: \"flex\",\n    alignItems: \"center\",\n    // height: \"10px\",\n    \"& input\": {\n      width: \"20px\",\n      height: \"20px\",\n    },\n  },\n  button: (props) => ({\n    width: \"80%\",\n    color: \"white\",\n    // flex-grow: 1;\n    margin: \"10px 0\",\n    background: props.color,\n    transition: \"filter 300ms\",\n    \"&:hover\": {\n      background: props.color,\n      filter: \"brightness(1.2)\",\n    },\n  }),\n  tab: {\n    margin: \"20px 0\"\n  }\n});\n\n// group model\nconst groupModel = {\n  projectName: \"\",\n  members: [],\n  task: [],\n  discussions: [],\n};\n\nconst DashboardPage = ({ currentUser }) => {\n  // usestyles\n  const [props, setProps] = useState({ color: \"#52b788\" });\n  const classes = useStyles(props);\n  // user data states\n  const [currentUserObj, setCurrentUserObj] = useState(defaultModel);\n  const [friends, setFriends] = useState([]);\n  const [groups, setGroups] = useState([groupModel]);\n  const [selectedGroup, setSelectedGroup] = useState(); // store the id of the group\n\n  // tab/modal states\n  const [leftTab, setLeftTab] = useState(0);\n  const [rightTab, setRightTab] = useState(0);\n  const [openModal, setOpenModal] = useState(false);\n  const [newGroup, setNewGroup] = useState(groupModel);\n\n  useEffect(() => {\n    // getUser, getFriends, getGroups\n    getUser(currentUser, setCurrentUserObj);\n    getFriends(currentUser, setFriends);\n  }, [currentUser]);\n\n  useEffect(() => {\n    // want to reupdate the groups when currentUserObj updates\n    getGroups(currentUser, setGroups);\n  }, [currentUserObj]);\n\n  // tabs and modals handling\n  const handleLeftTab = (e, value) => {\n    setLeftTab(value);\n  };\n\n  const handleRightTab = (e, value) => {\n    setRightTab(value);\n  };\n\n  const handleModal = (open) => {\n    setOpenModal(open);\n  };\n\n  // creating groups, tasks, discussions\n  const handleCreateGroup = () => {\n    if (!newGroup[\"projectName\"] || newGroup[\"members\"].length < 1) {\n      alert(\"Select a project name and at least one member!\");\n      return;\n    }\n    // create the group, and then update 'groups' and 'currentUser'\n    createGroup(\n      currentUser,\n      {\n        ...newGroup,\n        members: [...newGroup[\"members\"], currentUserObj[\"_id\"]],\n      },\n      setCurrentUserObj\n    );\n\n    // close modal and set newGroup back to default\n    setNewGroup(groupModel);\n    setOpenModal(false);\n  };\n\n  // update selectedGroup\n  const handleCreateGroupMembers = (friend) => {\n    if (newGroup[\"members\"].includes(friend)) {\n      setNewGroup((prev) => ({\n        ...prev,\n        members: prev[\"members\"].filter((item) => item !== friend),\n      }));\n    } else {\n      setNewGroup((prev) => ({\n        ...prev,\n        members: [...new Set([...prev[\"members\"], friend])],\n      }));\n    }\n  };\n\n  const handleCreateGroupName = (name) => {\n    setNewGroup((prev) => ({\n      ...prev,\n      projectName: name,\n    }));\n  };\n\n  const handleSelectedGroup = (group) => {\n    setSelectedGroup(group);\n    console.log(\"selected group\", group);\n  };\n\n  const handleCreateDiscussion = () => {\n    console.log(\"creating discussions\");\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"dashboardPage-root\">\n        {/* ************************ left side **********************\t*/}\n        <div className=\"dashboardPage-left\">\n          <div className=\"dashboardPage-profile\">\n            <div className=\"dashboardPage-profileImgContainer\">\n              <img\n                className=\"dashboardPage-profileImg\"\n                src={currentUserObj[\"profile\"][\"profileImg\"]}\n              />\n            </div>\n            <div className=\"dashboardPage-profileDetails\">\n              <h3>{currentUserObj[\"username\"]}</h3>\n              <p>Year {currentUserObj[\"profile\"][\"year\"]}</p>\n              <p>{currentUserObj[\"profile\"][\"program\"]}</p>\n            </div>\n          </div>\n          <Divider variant=\"middle\" className=\"dashboardPage-leftDivider\" />\n          <div className=\"dashboardPage-friendGroup\">\n            <Tabs\n              value={leftTab}\n              onChange={handleLeftTab}\n              textColor=\"primary\"\n              indicatorColor=\"primary\"\n              aria-label=\"basic tabs example\"\n              centered\n            >\n              <Tab label=\"Friends\" />\n              <Tab label=\"Groups\" />\n            </Tabs>\n            {/* insert friend/group components here */}\n            {leftTab === 0 ? (\n              <div className=\"dashboardPage-friendsContainer\">\n                {friends.map((friend, index) => {\n                  return <Friend key={index} friend={friend} />;\n                })}\n              </div>\n            ) : (\n              <div className=\"dashboardPage-groupsContainer\">\n                <div className=\"dashboardPage-groups\">\n                  {groups.map((group, index) => {\n                    return (\n                      <Group\n                        key={index}\n                        handleSelectedGroup={handleSelectedGroup}\n                        group={group}\n                      />\n                    );\n                  })}\n                </div>\n                <div className=\"dashboardPage-addGroupContainer\">\n                  <Divider className=\"dashboardPage-groupDivider\" />\n                  <Button\n                    onClick={() => handleModal(true)}\n                    color=\"primary\"\n                    size=\"large\"\n                    variant=\"outlined\"\n                  >\n                    {/* <AddCircleIcon fontSize=\"large\" color=\"primary\" /> */}\n                    Add Group\n                  </Button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* ************************ right side **********************\t*/}\n\n        <Divider\n          variant=\"middle\"\n          orientation=\"vertical\"\n          className=\"dashboardPage-mainDivider\"\n        />\n        <div className=\"dashboardPage-right\">\n          <Tabs\n            value={rightTab}\n            onChange={handleRightTab}\n            textColor=\"primary\"\n            indicatorColor=\"primary\"\n            aria-label=\"basic tabs example\"\n            centered\n            className={classes.tab}\n          >\n            <Tab label=\"Tasks\" />\n            <Tab label=\"Discussions\" />\n            <Tab label=\"Members\" />\n          </Tabs>\n\n          {selectedGroup ? (\n            <>\n              {rightTab === 0 && (\n                <Tasks\n                  currentUser={currentUser}\n                  selectedGroup={selectedGroup}\n                  setSelectedGroup={setSelectedGroup}\n                />\n              )}\n\n              {rightTab === 1 && (\n                <div className=\"dashboardPage-discussions\">\n                  <Discussions\n                    currentUser={currentUser}\n                    selectedGroup={selectedGroup}\n                    setSelectedGroup={setSelectedGroup}\n                  />\n                </div>\n              )}\n              {rightTab === 2 && <Members members={selectedGroup[\"members\"]} />}\n            </>\n          ) : (\n            <div className=\"dashboardPage-selectGroup\">\n              <h2>Please Select a group</h2>\n            </div>\n          )}\n\n          {/* modal that is opened to create group */}\n          <Modal open={openModal} onClose={() => handleModal(false)}>\n            <div className=\"dashboardPage-groupModal\">\n              <h2>Select Members</h2>\n              <div className=\"dashboardPage-friendsContainer dashboardPage-modalFriends\">\n                {friends.map((friend, index) => {\n                  return (\n                    <div key={index} className={classes.modalItem}>\n                      <input\n                        type=\"checkbox\"\n                        onChange={() => handleCreateGroupMembers(friend)}\n                        value={friend}\n                      />\n                      <Friend key={index} friend={friend} />\n                    </div>\n                  );\n                })}\n              </div>\n              <div className=\"dashboardPage-modalFooter\">\n                <input\n                  value={newGroup[\"projectName\"]}\n                  onChange={(e) => handleCreateGroupName(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"group name\"\n                />\n                <Button\n                  className={classes.button}\n                  variant=\"contained\"\n                  onClick={handleCreateGroup}\n                >\n                  Create Group\n                </Button>\n              </div>\n            </div>\n          </Modal>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default DashboardPage;\n","import React from \"react\";\nimport \"./styleWidgets.css\"\nconst Widget = ({ children, title }) => {\n  return (\n    <div className=\"Widget-root\">\n\t\t\t<h2>{title}</h2>\n      <div>{children}</div>\n    </div>\n  );\n};\n\nexport default Widget;\n","import React from \"react\";\nimport \"./styles/styleAdminDashboard.css\";\nimport Widget from \"../../components/Admin/Widget\";\nimport { Divider } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\n// hard coded data for the reports and messages, this will be inserted into the widgets below\nconst reports = [\n  {\n    user: \"a\",\n    content: \"Toxicity, Verbal Abuse\",\n  },\n  { user: \"b\", content: \"Ths guy is trolling me\" },\n];\n\nconst AdminDashboard = ({ currentUser, users }) => {\n  return (\n    <>\n      <h1> Dashboard </h1>\n      <Divider />\n      <div className=\"AdminDashboard-root\">\n        <Widget className=\"Widget-reports\" title=\"Reports\">\n          <ul>\n            {reports.map((report, i) => {\n              return (\n                <Link  key={i} to=\"reports\">\n                  <div className=\"Widget-liContainer\">\n                    <li>\n                      {report[\"user\"]} - {report[\"content\"]}\n                    </li>\n                  </div>{\" \"}\n                </Link>\n              );\n            })}\n          </ul>\n        </Widget>\n      </div>\n    </>\n  );\n};\n\nexport default AdminDashboard;\n","export const resetID = (array, idType) => {\n\treturn array.map((item, index) => {\n\t\treturn {...item, [idType]: index}\n\t})\n}\n","import React, { useState, useEffect } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { Divider } from \"@mui/material\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport \"./styles/styleAdminTables.css\";\nimport { resetID } from \"./Helper.js\";\nimport { getAllUsers, removeUser } from \"../../actions/user\";\n\nconst formatList = (list) => {\n  return list.map((x) => {\n    return x + \", \";\n  });\n};\nconst AdminUsers = ({ currentUser }) => {\n  const [users, setUsers] = useState([]);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const [selectedID, setSelectedID] = useState(null);\n\n  useEffect(() => {\n    getAllUsers(setUsers);\n  }, []);\n\n  const handleClick = (e, userID) => {\n    setAnchorEl(e.currentTarget);\n    console.log(userID);\n    setSelectedID(userID);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const removeID = () => {\n    console.log(selectedID);\n    removeUser(selectedID, setUsers);\n\n    handleClose();\n  };\n\n  return (\n    <>\n      <h1> Users </h1>\n      <Divider className=\"Admin-tableDivider\" />\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Id</TableCell>\n              <TableCell align=\"right\">Username</TableCell>\n              <TableCell align=\"right\">Name</TableCell>\n              <TableCell align=\"right\">Courses</TableCell>\n              <TableCell align=\"right\">Program</TableCell>\n              <TableCell align=\"right\">Year</TableCell>\n              <TableCell align=\"right\">Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users &&\n              users.map((user) => (\n                <TableRow key={user[\"_id\"]}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {user[\"_id\"]}\n                  </TableCell>\n                  <TableCell align=\"right\">{user[\"username\"]}</TableCell>\n                  <TableCell align=\"right\">{user[\"profile\"][\"name\"]}</TableCell>\n                  <TableCell align=\"right\">\n                    {formatList(user[\"profile\"][\"courses\"])}\n                  </TableCell>\n                  <TableCell align=\"right\">{user[\"profile\"][\"program\"]}</TableCell>\n                  <TableCell align=\"right\">{user[\"profile\"][\"year\"]}</TableCell>\n                  <TableCell align=\"right\">\n                    <MoreVertIcon\n                      className=\"Admin-moreIcon\"\n                      onClick={(e) => handleClick(e, user[\"_id\"])}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Menu anchorEl={anchorEl} open={open} onClose={handleClose}>\n        <MenuItem onClick={removeID}>Permanently Ban</MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default AdminUsers;\n","import React, {useState} from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { Divider } from \"@mui/material\";\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport \"./styles/styleAdminTables.css\";\nimport { resetID } from \"./Helper.js\";\n\nconst reportsData = [\n\t{\n\t\treportID: 0,\n\t\treporter: \"a\",\n\t\treported: \"b\",\n\t\t// there will be a tight word count on the content, so it doesn't overflood the cells in the tbale\n\t\tcontent: \"Toxixcity, Verbal Abuse\"\n\t},\n\t{\n\t\treportID: 1,\n\t\treporter: \"b\",\n\t\treported: \"c\",\n\t\tcontent: \"This person is trolling\"\n\t}\n];\n\nconst AdminReports = () => {\n\tconst [reports, setReports] = useState(reportsData)\n\tconst [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\t\n\tconst [selectedID, setSelectedID] = useState(null);\n  const handleClick = (e, reportID) => {\n    setAnchorEl(e.currentTarget);\n\t\tconsole.log(reportID);\n\t\tsetSelectedID(reportID);\n\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n\tconst removeID = () => {\n\t\tconsole.log(selectedID)\n\t\tsetReports(prev => {\n\t\t\tlet filtered = prev.filter(report => report[\"reportID\"] !== selectedID);\n\t\t\treturn resetID(filtered, \"reportID\")\n\t\t});\n\t\thandleClose()\n\t}\n  return (\n    <>\n      <h1> Reports </h1>\n      <Divider className=\"Admin-tableDivider\" />\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Id</TableCell>\n              <TableCell align=\"right\">Reporter</TableCell>\n              <TableCell align=\"right\">Reported</TableCell>\n              <TableCell align=\"right\">Message</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {reports.map((report) => (\n              <TableRow key={report[\"reportID\"]}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {report[\"reportID\"]}\n                </TableCell>\n                <TableCell align=\"right\">{report[\"reporter\"]}</TableCell>\n                <TableCell align=\"right\">{report[\"reported\"]}</TableCell>\n                <TableCell className=\"Admin-reportcontent\" align=\"right\">{report[\"content\"]}</TableCell>\n                <TableCell align=\"right\">\n                  <MoreVertIcon className=\"Admin-moreIcon\" onClick={e => handleClick(e, report[\"reportID\"])}/>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\t\t\t<Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={removeID}>Remove</MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default AdminReports;\n","import React from \"react\";\nimport Button from '@mui/material/Button';\n\nconst SignupForm = ({ handleSubmit, info, setInfo }) => {\n  return (\n    <div className=\"SignupForm-root\">\n      <form>\n        <label className=\"loginForm-input\">\n          <h5>Username</h5>\n          <input\n            required\n            type=\"text\"\n            onChange={(e) => setInfo({ ...info, username: e.target.value })}\n          />\n        </label>\n        <br/>\n        <label className=\"loginForm-input\">\n          <h5>Name</h5>\n          <input\n            \n            type=\"text\"\n            onChange={(e) => setInfo({ ...info, name: e.target.value })}\n          />\n        </label>\n        <br />\n        <label className=\"loginForm-input\">\n          <h5>Password</h5>\n          <input\n            \n            type=\"text\"\n            onChange={(e) => setInfo({ ...info, password: e.target.value })}\n          />\n        </label>\n        <br />\n        <label className=\"loginForm-input\">\n          <h5>Year</h5>\n          <select\n          onChange={(e) => setInfo({ ...info, year: e.target.value })}\n          >\n            <option type=\"number\">{1}</option>\n            <option type=\"number\">{2}</option>\n            <option type=\"number\">{3}</option>\n            <option type=\"number\">{4}</option>\n          </select>\n        </label>\n        <br />\n        <label className=\"loginForm-input\">\n          <h5>program</h5>\n          <input\n            \n            type=\"text\"\n            onChange={(e) => setInfo({ ...info, program: e.target.value })}\n          />\n        </label>\n        <div className=\"loginForm-submit\">\n          <Button type=\"submit\" variant=\"contained\" onClick={handleSubmit}>\n            Sign up!\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SignupForm;\n","const data = {\n  data: [\n    {\n      sender: 1,\n      time: new Date(2021, 0, 1, 9, 10, 1),\n      content: \"hi\",\n    },\n    {\n      sender: 1,\n      time: new Date(2021, 1, 1, 9, 10, 2),\n      content: \"hi hi\",\n    },\n    {\n      sender: 1,\n      time: new Date(2021, 2, 1, 9, 10, 3),\n      content: \"hi hi hi\",\n    },\n    {\n      sender: 1,\n      time: new Date(2021, 3, 1, 9, 10, 4),\n      content: \"What's good\",\n    },\n  ],\n};\n\nexport default data;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport SignupForm from \"./SignupForm\";\nimport \"./signupStyle.css\";\nimport { signup } from \"../../actions/user\";\nconst Signup = () => {\n  const [info, setInfo] = useState({\n    name: \"\",\n    username: \"\",\n    password: \"\",\n    year: 1,\n    program: \"\",\n    profileImg: \"https://cdn.digg.com/wp-content/uploads/2021/11/08135427/Screen-Shot-2021-11-08-at-8.54.17-AM.jpg\"\n  });\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(typeof info[\"year\"], info[\"year\"])\n    if (\n      info[\"name\"] &&\n      info[\"username\"] &&\n      info[\"password\"] &&\n      info[\"year\"] &&\n      info[\"program\"]\n    ) {\n      signup(info, history);\n    } else {\n      alert(\"Please fill all the forms!\")\n    }\n  };\n\n  return (\n    <div className=\"loginRoot\">\n      <h1> Signup </h1>\n      <SignupForm handleSubmit={handleSubmit} info={info} setInfo={setInfo} />\n    </div>\n  );\n};\n\nexport default Signup;\n","import React from \"react\";\nimport Signup from \"../components/Signup/Signup\";\n\nfunction SignupPage() {\n  return (\n    <Signup />\n  );\n}\n\nexport default SignupPage;\n","import React, { useEffect, useState } from \"react\";\nimport { getUser, updateUser } from \"../../actions/user\";\nimport { defaultModel } from \"../../actions/defaultModel\";\nimport \"./profilePageStyles.css\";\nimport { Button } from \"@mui/material\";\n\nconst ProfilePage = ({ currentUser, setCurrentUser }) => {\n  const [currentUserObj, setCurrentUserObj] = useState(defaultModel);\n\n  useEffect(() => {\n    getUser(currentUser, setCurrentUserObj);\n  }, [currentUser]);\n\n  const handleUsername = (e) => {\n    e.preventDefault();\n    setCurrentUserObj((prev) => {\n      return { ...prev, username: e.target.value };\n    });\n  };\n\n  const handleOther = (e, attribute) => {\n    e.preventDefault();\n    let value = e.target.value;\n    if (attribute === \"year\") {\n      value = parseInt(value);\n    }\n    setCurrentUserObj((prev) => {\n      return {\n        ...prev,\n        profile: {\n          ...prev[\"profile\"],\n          [attribute]: value,\n        },\n      };\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newUser = await updateUser(currentUser, currentUserObj);\n    setCurrentUser(newUser[\"username\"]);\n  };\n\n  console.log(typeof currentUserObj[\"profile\"][\"year\"]);\n  return (\n    <div className=\"profilePage-root\">\n      <div className=\"profilePage-header\">\n        <div className=\"profilePage-imageContainer\">\n          <img src={currentUserObj[\"profile\"][\"profileImg\"]} />\n        </div>\n\n        <h1>{currentUserObj[\"username\"]}</h1>\n      </div>\n      <form className=\"profilePage-form\">\n        <div className=\"profilePage-inner-div\">\n          <h5>Username</h5>\n          <input\n            value={currentUserObj[\"username\"]}\n            onChange={handleUsername}\n            type=\"text\"\n          />\n        </div>\n\n        <div className=\"profilePage-inner-div\">\n          <h5>Program</h5>\n          <input\n            value={currentUserObj[\"profile\"][\"program\"]}\n            onChange={(e) => handleOther(e, \"program\")}\n            type=\"text\"\n          />\n        </div>\n        <div className=\"profilePage-inner-div\">\n          <h5>Year</h5>\n          <select\n            value={currentUserObj[\"profile\"][\"year\"]}\n            onChange={(e) => handleOther(e, \"year\")}\n          >\n            <option type=\"number\">{1}</option>\n            <option type=\"number\">{2}</option>\n            <option type=\"number\">{3}</option>\n            <option type=\"number\">{4}</option>\n          </select>\n        </div>\n        <div className=\"profilePage-inner-div\">\n          <h5>Courses</h5>\n          {currentUserObj[\"profile\"][\"courses\"].map((item, i) => {\n            return <p key={i}>{item}</p>;\n          })}\n        </div>\n        <div className=\"profilePage-inner-div\">\n          <h5>Bio</h5>\n          <textarea\n            rows=\"4\"\n            cols=\"50\"\n            value={currentUserObj[\"profile\"][\"bio\"]}\n            onChange={(e) => handleOther(e, \"bio\")}\n            type=\"text\"\n            maxLength=\"150\"\n          />\n        </div>\n        <div className=\"profilePage-submit\">\n          <div></div>\n          <Button type=\"submit\" variant=\"contained\" onClick={handleSubmit}>\n            Save\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport FindPage from \"./pages/FindPage/FindPage\";\nimport Home from \"./pages/Home/Home\";\nimport Navbar from \"./components/NavBar/Navbar\";\nimport LoginPage from \"./pages/LoginPage\";\nimport DashboardPage from \"./pages/DashboardPage/DashboardPage\";\nimport AdminDashboard from \"./pages/Admin/AdminDashboard\";\nimport data from \"./users.js\";\nimport groupsData from \"./groups.js\";\nimport AdminUsers from \"./pages/Admin/AdminUsers\";\nimport AdminReports from \"./pages/Admin/AdminReports\";\nimport AdminCourses from \"./pages/Admin/AdminCourses\";\nimport AdminMessages from \"./pages/Admin/AdminMessages\";\nimport SignupPage from \"./pages/SignupPage\";\nimport ProfilePage from \"./pages/ProfilePage/ProfilePage\";\nimport { checkSession } from \"./actions/user\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null); // user object\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  console.log(currentUser);\n  useEffect(() => {\n    if (!currentUser) {\n      setIsAdmin(false);\n    }\n  }, [currentUser]);\n\n  useEffect(() => {\n    console.log(\"check session\");\n    checkSession(setCurrentUser);\n  });\n\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <Router>\n        {/* not secure atm, we'll add that in phase 2 */}\n\n        {!isAdmin ? (\n          <>\n            <Navbar\n              auth={currentUser ? true : false}\n              currentUser={currentUser}\n              setCurrentUser={setCurrentUser}\n              isAdmin={isAdmin}\n            />\n            <Switch>\n              <Route exact path=\"/\">\n                {!currentUser ? (\n                  <Home />\n                ) : (\n                  <DashboardPage currentUser={currentUser} />\n                )}\n              </Route>\n\n              <Route path=\"/login\">\n                <LoginPage\n                  setCurrentUser={setCurrentUser}\n                  setIsAdmin={setIsAdmin}\n                />\n              </Route>\n              <Route path=\"/signup\">\n                <SignupPage />\n              </Route>\n\n              <Route path=\"/find\">\n                {!currentUser ? (\n                  <Redirect to=\"/login\" />\n                ) : (\n                  <FindPage  currentUser={currentUser} />\n                )}\n              </Route>\n              <Route path=\"/profile\">\n                {!currentUser ? (\n                  <Redirect to=\"/login\" />\n                ) : (\n                  <ProfilePage\n                    currentUser={currentUser}\n                    setCurrentUser={setCurrentUser}\n                  />\n                )}\n              </Route>\n            </Switch>\n          </>\n        ) : (\n          <>\n            <Navbar\n              auth={currentUser ? true : false}\n              currrentUser={currentUser}\n              setCurrentUser={setCurrentUser}\n              isAdmin={isAdmin}\n            />\n            <Switch>\n              <Route exact path=\"/\">\n                <AdminDashboard currentUser={currentUser} />\n              </Route>\n              <Route path=\"/reports\">\n                <AdminReports currentUser={currentUser} />\n              </Route>\n              <Route path=\"/users\">\n                <AdminUsers currentUser={currentUser} />\n              </Route>\n            </Switch>\n          </>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}